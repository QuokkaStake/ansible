---
- name: Install cosmos-validators-exporter
  hosts: "{{ hosts | default('monitoring') }}"

  environment:
    GOROOT: /usr/lib/go
    GOPATH: "{{ ansible_env.HOME }}/go"
    GOBIN: "{{ ansible_env.HOME }}/go/bin"
    PATH: "{{ ansible_env.PATH }}:/usr/lib/go/bin:{{ ansible_env.HOME }}/go/bin"

  vars:
    build_binary: "{{ build | default(true) | bool }}"

  tasks:
    - name: Clone the repo
      when: build_binary
      ansible.builtin.git:
        repo: https://github.com/QuokkaStake/cosmos-validators-exporter
        dest: "{{ ansible_user_dir }}/cosmos-validators-exporter"
        version: main
        update: true

    - name: Install binary
      when: build_binary
      community.general.make:
        chdir: "{{ ansible_user_dir }}/cosmos-validators-exporter"
        target: install

    - name: Create config directory
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/config"
        state: directory
        mode: '0755'

    - name: Generate config
      become: true
      ansible.builtin.copy:
        src: "../../../configs/exporters/{{ inventory_hostname }}/cosmos-validators-exporter.toml"
        dest: "{{ ansible_user_dir }}/config/cosmos-validators-exporter.toml"
        mode: "0755"

    - name: Generate systemd file
      when: build_binary
      become: true
      ansible.builtin.template:
        src: ../../../templates/monitoring/exporters/cosmos-validators-exporter.service.j2
        dest: /etc/systemd/system/cosmos-validators-exporter.service
        mode: '0644'

    - name: Verify config # noqa: command-instead-of-module risky-shell-pipe
      become: true
      ansible.builtin.shell: >
          {{ ansible_user_dir }}/go/bin/cosmos-validators-exporter validate-config
          --config {{ ansible_user_dir }}/config/cosmos-validators-exporter.toml | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g"
      changed_when: false
      register: config_output

    - name: Print config validation result
      ansible.builtin.debug:
        msg:
          - "Stdout:"
          - "{{ (config_output.stdout).split('\n') }}"
          - "Stderr:"
          - "{{ (config_output.stderr).split('\n') }}"

    - name: Start the service
      become: true
      ansible.builtin.systemd:
        state: restarted
        name: cosmos-validators-exporter
        enabled: true
        daemon_reload: true
